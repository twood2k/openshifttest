<?xml version='1.0'?>
<configuration 
  xmlns="urn:activemq" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">
  <core 
    xmlns="urn:activemq:core" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq:core ">
    <name>oscls-soa-ap41.osc.uscg.mil</name>
    <persistence-enabled>true</persistence-enabled>
    <!-- this could be ASYNCIO, MAPPED, NIO
           ASYNCIO: Linux Libaio
           MAPPED: mmap files
           NIO: Plain Java Files
       -->
    <journal-type>NIO</journal-type>
    <paging-directory>./data/paging</paging-directory>
    <bindings-directory>./data/bindings</bindings-directory>
    <journal-directory>./data/journal</journal-directory>
    <large-messages-directory>./data/large-messages</large-messages-directory>
    <journal-datasync>true</journal-datasync>
    <journal-min-files>2</journal-min-files>
    <journal-pool-files>-1</journal-pool-files>
    <!--
        You can verify the network health of a particular NIC by specifying the <network-check-NIC> element.
         <network-check-NIC>theNicName</network-check-NIC>
        -->
    <!--
        Use this to use an HTTP server to validate the network
         <network-check-URL-list>http://www.apache.org</network-check-URL-list> -->
    <!-- <network-check-period>10000</network-check-period> -->
    <!-- <network-check-timeout>1000</network-check-timeout> -->
    <!-- this is a comma separated list, no spaces, just DNS or IPs
           it should accept IPV6

           Warning: Make sure you understand your network topology as this is meant to validate if your network is valid.
                    Using IPs that could eventually disappear or be partially visible may defeat the purpose.
                    You can use a list of multiple IPs, and if any successful ping will make the server OK to continue running -->
    <!-- <network-check-list>10.0.0.1</network-check-list> -->
    <!-- use this to customize the ping used for ipv4 addresses -->
    <!-- <network-check-ping-command>ping -c 1 -t %d %s</network-check-ping-command> -->
    <!-- use this to customize the ping used for ipv6 addresses -->
    <!-- <network-check-ping6-command>ping6 -c 1 %2$s</network-check-ping6-command> -->
    <!--
       This value was determined through a calculation.
       Your system could perform 1 writes per millisecond
       on the current journal configuration.
       That translates as a sync write every 996000 nanoseconds
      -->
    <journal-buffer-timeout>996000</journal-buffer-timeout>
    <!-- how often we are looking for how many bytes are being used on the disk in ms -->
    <disk-scan-period>5000</disk-scan-period>
    <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
           that won't support flow control. -->
    <max-disk-usage>90</max-disk-usage>
    <!-- should the broker detect dead locks and other issues -->
    <critical-analyzer>true</critical-analyzer>
    <critical-analyzer-timeout>120000</critical-analyzer-timeout>
    <critical-analyzer-check-period>60000</critical-analyzer-check-period>
    <critical-analyzer-policy>HALT</critical-analyzer-policy>
    <!-- the system will enter into page mode once you hit this limit.
           This is an estimate in bytes of how much the messages are using in memory

            The system will use half of the available memory (-Xmx) by default for the global-max-size.
            You may specify a different value here if you need to customize it to your needs.

            <global-max-size>100Mb</global-max-size>

      -->
    

  
    <address-settings>
      <!-- if you define auto-create on certain queues, management has to be auto-create -->
      <address-setting match="activemq.management#">
        <dead-letter-address>DLQ</dead-letter-address>
        <expiry-address>ExpiryQueue</expiry-address>
        <redelivery-delay>0</redelivery-delay>
        <!-- with -1 only the global-max-size is in use for limiting -->
        <max-size-bytes>-1</max-size-bytes>
        <message-counter-history-day-limit>10</message-counter-history-day-limit>
        <address-full-policy>PAGE</address-full-policy>
        <auto-create-queues>true</auto-create-queues>
        <auto-create-addresses>true</auto-create-addresses>
        <auto-create-jms-queues>true</auto-create-jms-queues>
        <auto-create-jms-topics>true</auto-create-jms-topics>
      </address-setting>
      <!--default for catch all-->
      <address-setting match="#">
        <dead-letter-address>DLQ</dead-letter-address>
        <expiry-address>ExpiryQueue</expiry-address>
        <redelivery-delay>0</redelivery-delay>
        <!-- with -1 only the global-max-size is in use for limiting -->
        <max-size-bytes>-1</max-size-bytes>
        <message-counter-history-day-limit>10</message-counter-history-day-limit>
        <address-full-policy>PAGE</address-full-policy>
        <auto-create-queues>true</auto-create-queues>
        <auto-create-addresses>true</auto-create-addresses>
        <auto-create-jms-queues>true</auto-create-jms-queues>
        <auto-create-jms-topics>true</auto-create-jms-topics>
      </address-setting>
    </address-settings>
    <addresses>
      
      <address name="DLQ">
        <anycast>
          <queue name="DLQ" />
        </anycast>
      </address>
      <address name="ExpiryQueue">
        <anycast>
          <queue name="ExpiryQueue" />
        </anycast>
      </address>
    </addresses>
    <security-settings>
      <security-setting match="#">
        <permission type="createNonDurableQueue" roles="admins,soaRouterG"/>
        <permission type="deleteNonDurableQueue" roles="admins,soaRouterG"/>
        <permission type="createDurableQueue" roles="admins,soaRouterG"/>
        <permission type="deleteDurableQueue" roles="admins,soaRouterG"/>
        <permission type="createAddress" roles="admins,soaRouterG"/>
        <permission type="deleteAddress" roles="admins,soaRouterG"/>
        <permission type="consume" roles="admins,soaRouterG"/>
        <permission type="browse" roles="admins,soaRouterG"/>
        <permission type="send" roles="admins,soaRouterG"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="admins,soaRouterG"/>
      </security-setting>
      <security-setting match="SYSTEMA_IN_Q">
        <permission type="createNonDurableQueue" roles="Ausers"/>
        <permission type="deleteNonDurableQueue" roles="Ausers"/>
        <permission type="createDurableQueue" roles="Ausers"/>
        <permission type="deleteDurableQueue" roles="Ausers"/>
        <permission type="createAddress" roles="Ausers"/>
        <permission type="deleteAddress" roles="Ausers"/>
        <permission type="consume" roles="Ausers"/>
        <permission type="browse" roles="Ausers"/>
        <permission type="send" roles="soaRouterG"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="Ausers"/>
      </security-setting>
      <security-setting match="SYSTEMA_OUT_Q">
        <permission type="createNonDurableQueue" roles="Ausers"/>
        <permission type="deleteNonDurableQueue" roles="Ausers"/>
        <permission type="createDurableQueue" roles="Ausers"/>
        <permission type="deleteDurableQueue" roles="Ausers"/>
        <permission type="createAddress" roles="Ausers"/>
        <permission type="deleteAddress" roles="Ausers"/>
        <permission type="consume" roles="soaRouterG"/>
        <permission type="browse" roles="soaRouterG"/>
        <permission type="send" roles="Ausers"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="Ausers"/>
      </security-setting>
      <security-setting match="SYSTEMB_IN_Q">
        <permission type="createNonDurableQueue" roles="Busers"/>
        <permission type="deleteNonDurableQueue" roles="Busers"/>
        <permission type="createDurableQueue" roles="Busers"/>
        <permission type="deleteDurableQueue" roles="Busers"/>
        <permission type="createAddress" roles="Busers"/>
        <permission type="deleteAddress" roles="Busers"/>
        <permission type="consume" roles="Busers"/>
        <permission type="browse" roles="Busers"/>
        <permission type="send" roles="soaRouterG"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="Busers"/>
      </security-setting>
      <security-setting match="SYSTEMB_OUT_Q">
        <permission type="createNonDurableQueue" roles="Busers"/>
        <permission type="deleteNonDurableQueue" roles="Busers"/>
        <permission type="createDurableQueue" roles="Busers"/>
        <permission type="deleteDurableQueue" roles="Busers"/>
        <permission type="createAddress" roles="Busers"/>
        <permission type="deleteAddress" roles="Busers"/>
        <permission type="consume" roles="soaRouterG"/>
        <permission type="browse" roles="soaRouterG"/>
        <permission type="send" roles="Busers"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="Busers"/>
      </security-setting>
      <security-setting match="SYSTEMC_IN_Q">
        <permission type="createNonDurableQueue" roles="Cusers"/>
        <permission type="deleteNonDurableQueue" roles="Cusers"/>
        <permission type="createDurableQueue" roles="Cusers"/>
        <permission type="deleteDurableQueue" roles="Cusers"/>
        <permission type="createAddress" roles="Cusers"/>
        <permission type="deleteAddress" roles="Cusers"/>
        <permission type="consume" roles="Cusers"/>
        <permission type="browse" roles="Cusers"/>
        <permission type="send" roles="soaRouterG"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="Cusers"/>
      </security-setting>
      <security-setting match="SYSTEMC_OUT_Q">
        <permission type="createNonDurableQueue" roles="Cusers"/>
        <permission type="deleteNonDurableQueue" roles="Cusers"/>
        <permission type="createDurableQueue" roles="Cusers"/>
        <permission type="deleteDurableQueue" roles="Cusers"/>
        <permission type="createAddress" roles="Cusers"/>
        <permission type="deleteAddress" roles="Cusers"/>
        <permission type="consume" roles="soaRouterG"/>
        <permission type="browse" roles="soaRouterG"/>
        <permission type="send" roles="Cusers"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="Cusers"/>
      </security-setting>
      <security-setting match="BRIAN_IN_Q">
        <permission type="createNonDurableQueue" roles="brianUsers"/>
        <permission type="deleteNonDurableQueue" roles="brianUsers"/>
        <permission type="createDurableQueue" roles="brianUsers"/>
        <permission type="deleteDurableQueue" roles="brianUsers"/>
        <permission type="createAddress" roles="brianUsers"/>
        <permission type="deleteAddress" roles="brianUsers"/>
        <permission type="consume" roles="brianUsers"/>
        <permission type="browse" roles="brianUsers"/>
        <permission type="send" roles="soaRouterG"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="brianUsers"/>
      </security-setting>
      <security-setting match="BRIAN_OUT_Q">
        <permission type="createNonDurableQueue" roles="brianUsers"/>
        <permission type="deleteNonDurableQueue" roles="brianUsers"/>
        <permission type="createDurableQueue" roles="brianUsers"/>
        <permission type="deleteDurableQueue" roles="brianUsers"/>
        <permission type="createAddress" roles="brianUsers"/>
        <permission type="deleteAddress" roles="brianUsers"/>
        <permission type="consume" roles="soaRouterG"/>
        <permission type="browse" roles="soaRouterG"/>
        <permission type="send" roles="brianUsers"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="brianUsers"/>
      </security-setting>
      <security-setting match="BRIAN_CTRL_Q">
        <permission type="createNonDurableQueue" roles="brianUsers"/>
        <permission type="deleteNonDurableQueue" roles="brianUsers"/>
        <permission type="createDurableQueue" roles="brianUsers"/>
        <permission type="deleteDurableQueue" roles="brianUsers"/>
        <permission type="createAddress" roles="brianUsers"/>
        <permission type="deleteAddress" roles="brianUsers"/>
        <permission type="consume" roles="brianUsers"/>
        <permission type="browse" roles="brianUsers"/>
        <permission type="send" roles="brianUsers"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="brianUsers"/>
      </security-setting>
      <security-setting match="brian.publication.q">
        <permission type="createNonDurableQueue" roles="brianUsers"/>
        <permission type="deleteNonDurableQueue" roles="brianUsers"/>
        <permission type="createDurableQueue" roles="brianUsers"/>
        <permission type="deleteDurableQueue" roles="brianUsers"/>
        <permission type="createAddress" roles="brianUsers"/>
        <permission type="deleteAddress" roles="brianUsers"/>
        <permission type="consume" roles="brianUsers"/>
        <permission type="browse" roles="brianUsers"/>
        <permission type="send" roles="brianUsers"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="brianUsers"/>
      </security-setting>
      <security-setting match="SYSTEMA_TOPIC">
        <permission type="createNonDurableQueue" roles="Ausers"/>
        <permission type="deleteNonDurableQueue" roles="Ausers"/>
        <permission type="createDurableQueue" roles="Ausers"/>
        <permission type="deleteDurableQueue" roles="Ausers"/>
        <permission type="createAddress" roles="Ausers"/>
        <permission type="deleteAddress" roles="Ausers"/>
        <permission type="consume" roles="Cusers"/>
        <permission type="browse" roles="Cusers"/>
        <permission type="send" roles="Ausers"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="Ausers"/>
      </security-setting>
      <security-setting match="CLIENT_EVENTS_T">
        <permission type="createNonDurableQueue" roles="users"/>
        <permission type="deleteNonDurableQueue" roles="users"/>
        <permission type="createDurableQueue" roles="users"/>
        <permission type="deleteDurableQueue" roles="users"/>
        <permission type="createAddress" roles="users"/>
        <permission type="deleteAddress" roles="users"/>
        <permission type="consume" roles="users"/>
        <permission type="browse" roles="users"/>
        <permission type="send" roles="users"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="users"/>
      </security-setting>
      <security-setting match="ActiveMQ.Advisory.#">
        <permission type="createNonDurableQueue" roles="users"/>
        <permission type="deleteNonDurableQueue" roles="users"/>
        <permission type="createDurableQueue" roles="users"/>
        <permission type="deleteDurableQueue" roles="users"/>
        <permission type="createAddress" roles="users"/>
        <permission type="deleteAddress" roles="users"/>
        <permission type="consume" roles="users"/>
        <permission type="browse" roles="users"/>
        <permission type="send" roles="users"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="users"/>
      </security-setting>
      <security-setting match="EGIS.2.IN_Q">
        <permission type="createNonDurableQueue" roles="egisG"/>
        <permission type="deleteNonDurableQueue" roles="egisG"/>
        <permission type="createDurableQueue" roles="egisG"/>
        <permission type="deleteDurableQueue" roles="egisG"/>
        <permission type="createAddress" roles="egisG"/>
        <permission type="deleteAddress" roles="egisG"/>
        <permission type="consume" roles="egisG"/>
        <permission type="browse" roles="egisG"/>
        <permission type="send" roles="soaRouterG"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="egisG"/>
      </security-setting>
      <security-setting match="EGIS.2.OUT_Q">
        <permission type="createNonDurableQueue" roles="soaRouterG"/>
        <permission type="deleteNonDurableQueue" roles="soaRouterG"/>
        <permission type="createDurableQueue" roles="soaRouterG"/>
        <permission type="deleteDurableQueue" roles="soaRouterG"/>
        <permission type="createAddress" roles="soaRouterG"/>
        <permission type="deleteAddress" roles="soaRouterG"/>
        <permission type="consume" roles="egisG,soaRouterG"/>
        <permission type="browse" roles="egisG,soaRouterG"/>
        <permission type="send" roles="egisG,soaRouterG"/>
        <!-- we need this otherwise ./artemis data imp wouldn't work -->
        <permission type="manage" roles="soaRouterG"/>
      </security-setting>
    </security-settings>
    <acceptors>
      <!-- useEpoll means: it will use Netty epoll if you are on a system (Linux) that supports it -->
      <!-- amqpCredits: The number of credits sent to AMQP producers -->
      <!-- amqpLowCredits: The server will send the # credits specified at amqpCredits at this low mark -->
      <!-- Acceptor for every supported protocol -->
      <acceptor name="ssl">tcp://0.0.0.0:61617?protocols=OPENWIRE&amp;sslEnabled=true&amp;localPort=16161&amp;tcpSendBufferSize=1048576&amp;tcpReceiveBufferSize=1048576&amp;protocols=OPENWIRE&amp;keyStorePath=/opt/brokers/soabroker/etc/broker.ks&amp;keyStorePassword=password&amp;trustStorePath=/opt/brokers/soabroker/etc/broker.ts&amp;trustStorePassword=password&amp;needClientAuth=true</acceptor>
      <acceptor name="tcp">tcp://0.0.0.0:61616</acceptor>
    </acceptors>
    
  </core>
</configuration>
